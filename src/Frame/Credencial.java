package Frame;

import AppPackage.AnimationClass;
import LDI.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Ruben
 */
public class Credencial extends javax.swing.JInternalFrame {

    //Variables Globales
    private DefaultTableModel modelo;
    TableRowSorter trs;
    
    //Se realiza una instanciación para que los objetos obtengan todos los metodos de esa libreria(ImageIcon)
    ImageIcon imagenAviso =  new ImageIcon(getClass().getResource("/Imagenes/WarningAviso.png"));
    
    // Defino la variable publica indice, que almacena el indice del JTable.
    public int indiceFila;  

    public Credencial() {
       
        initComponents();
        //Sirve para que no haga ninguna acción a la hora de presionar la x
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    }

    //Metodo para cargar las columnas en la tabla
    private void getColumn(){
        modelo = (DefaultTableModel) tblCredencial.getModel();
        // Cargo las columnas de titulo al Jtable
        modelo.addColumn("Codigo");
        modelo.addColumn("Usuario");
        modelo.addColumn("Contraseña");
        modelo.addColumn("Estado");  
    }
    
    //Metodo para cargar los registros en la tabla
    private void cargarTabla(){
        TablaCredencial objCredencial = new TablaCredencial();
        //Se Identifica el modelo de la JTable
        modelo = (DefaultTableModel) tblCredencial.getModel();
        ResultSet resultado = objCredencial.cargarCredencial();
        try {
            Object datos[] = new Object[4];
            while(resultado.next()){
                for(int i = 0; i < 4; i++){
                    //Importante, el getObject tiene que ser mayor que 0 por ende se coloca el 1
                    datos[i] = resultado.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grbtnCRUD = new javax.swing.ButtonGroup();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCredencial = new javax.swing.JTable();
        lblLimpiar = new javax.swing.JLabel();
        lblGuardar = new javax.swing.JLabel();
        lblBuscar = new javax.swing.JLabel();
        lblActualizar = new javax.swing.JLabel();
        lblEliminar = new javax.swing.JLabel();
        txtFiltrar = new javax.swing.JTextField();
        lblFiltrar = new javax.swing.JLabel();
        lblFlechaAbajo = new javax.swing.JLabel();
        lblDato = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        lblContrasena = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox<>();
        lblTituloCredencial = new javax.swing.JLabel();
        lblFlechaArriba = new javax.swing.JLabel();
        cmbUsuario = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IconoGuardar.png"))); // NOI18N
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IconoGuardar2.png"))); // NOI18N
        btnGuardar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IconoGuardar2.png"))); // NOI18N
        btnGuardar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IconoGuardar.png"))); // NOI18N
        btnGuardar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnGuardarMouseMoved(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, -1, -1));

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar.png"))); // NOI18N
        btnActualizar.setBorder(null);
        btnActualizar.setBorderPainted(false);
        btnActualizar.setContentAreaFilled(false);
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar2.png"))); // NOI18N
        btnActualizar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar2.png"))); // NOI18N
        btnActualizar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar.png"))); // NOI18N
        btnActualizar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnActualizarMouseMoved(evt);
            }
        });
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 280, -1, -1));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        btnBuscar.setBorder(null);
        btnBuscar.setBorderPainted(false);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar2.png"))); // NOI18N
        btnBuscar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar2.png"))); // NOI18N
        btnBuscar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 280, -1, -1));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar2.png"))); // NOI18N
        btnEliminar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar2.png"))); // NOI18N
        btnEliminar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEliminarMouseMoved(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 280, -1, -1));

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Limpiar.png"))); // NOI18N
        btnLimpiar.setBorder(null);
        btnLimpiar.setBorderPainted(false);
        btnLimpiar.setContentAreaFilled(false);
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Limpiar2.png"))); // NOI18N
        btnLimpiar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Limpiar2.png"))); // NOI18N
        btnLimpiar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Limpiar.png"))); // NOI18N
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 280, -1, -1));

        tblCredencial = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tblCredencial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCredencial.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCredencial.getTableHeader().setReorderingAllowed(false);
        tblCredencial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCredencialMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCredencial);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 380, 200));

        lblLimpiar.setBackground(new java.awt.Color(0, 0, 0));
        lblLimpiar.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        lblLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        lblLimpiar.setText("Limpiar");
        getContentPane().add(lblLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 330, -1, -1));

        lblGuardar.setBackground(new java.awt.Color(0, 0, 0));
        lblGuardar.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        lblGuardar.setForeground(new java.awt.Color(0, 0, 0));
        lblGuardar.setText("Guardar");
        getContentPane().add(lblGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, -1, -1));

        lblBuscar.setBackground(new java.awt.Color(0, 0, 0));
        lblBuscar.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        lblBuscar.setForeground(new java.awt.Color(0, 0, 0));
        lblBuscar.setText("Buscar");
        getContentPane().add(lblBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, -1, -1));

        lblActualizar.setBackground(new java.awt.Color(0, 0, 0));
        lblActualizar.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        lblActualizar.setForeground(new java.awt.Color(0, 0, 0));
        lblActualizar.setText("Actualizar");
        getContentPane().add(lblActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, -1, -1));

        lblEliminar.setBackground(new java.awt.Color(0, 0, 0));
        lblEliminar.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        lblEliminar.setForeground(new java.awt.Color(0, 0, 0));
        lblEliminar.setText("Eliminar");
        getContentPane().add(lblEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 330, -1, -1));

        txtFiltrar.setBackground(new java.awt.Color(153, 153, 153));
        txtFiltrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltrarKeyTyped(evt);
            }
        });
        getContentPane().add(txtFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 110, 30));

        lblFiltrar.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        lblFiltrar.setForeground(new java.awt.Color(0, 0, 0));
        lblFiltrar.setText("Filtrar:");
        getContentPane().add(lblFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, -1, 30));

        lblFlechaAbajo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/drop-down-arrow.png"))); // NOI18N
        lblFlechaAbajo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblFlechaAbajo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFlechaAbajoMouseClicked(evt);
            }
        });
        getContentPane().add(lblFlechaAbajo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 40, 20));

        lblDato.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        lblDato.setForeground(new java.awt.Color(0, 0, 0));
        lblDato.setText("Datos");
        getContentPane().add(lblDato, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 210, 320, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 30, 10));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 10, 190));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 22, 10, 190));
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 250, 10));

        lblContrasena.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        lblContrasena.setForeground(new java.awt.Color(0, 0, 0));
        lblContrasena.setText("Contraseña:");
        getContentPane().add(lblContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 30));

        lblEstado.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        lblEstado.setForeground(new java.awt.Color(0, 0, 0));
        lblEstado.setText("Estado:");
        getContentPane().add(lblEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, 30));

        lblUsuario.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        lblUsuario.setForeground(new java.awt.Color(0, 0, 0));
        lblUsuario.setText("Rol:");
        getContentPane().add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 50, 20));

        txtClave.setBackground(new java.awt.Color(214, 217, 223));
        txtClave.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        txtClave.setForeground(new java.awt.Color(51, 51, 255));
        txtClave.setBorder(null);
        txtClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClaveKeyTyped(evt);
            }
        });
        getContentPane().add(txtClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 120, 20));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Capturkla.png"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 120, 4));

        txtCodigo.setBackground(new java.awt.Color(214, 217, 223));
        txtCodigo.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(51, 51, 255));
        txtCodigo.setBorder(null);
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });
        getContentPane().add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 120, 20));

        lblCodigo.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        lblCodigo.setForeground(new java.awt.Color(0, 0, 0));
        lblCodigo.setText("Código:");
        getContentPane().add(lblCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Capturkla.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 120, 3));

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "***Selecciona***", "Activo", "Inactivo" }));
        getContentPane().add(cmbEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 130, -1));

        lblTituloCredencial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/credenciales.gif"))); // NOI18N
        getContentPane().add(lblTituloCredencial, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, -30, -1, -1));

        lblFlechaArriba.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/caret-arrow-up.png"))); // NOI18N
        lblFlechaArriba.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblFlechaArriba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFlechaArribaMouseClicked(evt);
            }
        });
        getContentPane().add(lblFlechaArriba, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, -30, -1, -1));

        cmbUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "***Selecciona***", "Administrador", "Vendedor" }));
        getContentPane().add(cmbUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 130, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        //Programación para que el icono del filtrar, hacer un efecto de aparecer.
        //Instanciación de la libreria AnimatonClass.

        AnimationClass animacion = new AnimationClass();

        //******Filtrar******
        //Sirve para que el campo de txtFiltrar se visualice.

        //El primer parametro es la posición actual del elemento gráfico
        //La segunda es la posición que quiera mover el elemento grafico.
        animacion.jTextFieldXLeft(760,650, 10, 5, txtFiltrar);

        getColumn();
        cargarTabla(); 
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void lblFlechaAbajoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFlechaAbajoMouseClicked

        //Programación para que el icono del filtrar, hacer un efecto de aparecer.
        //Instanciación de la libreria AnimatonClass.

        AnimationClass animacion = new AnimationClass();

        //******Filtrar******
        //Sirve para que el campo de txtFiltrar se visualice.

        //El primer parametro es la posición actual del elemento gráfico
        //La segunda es la posición que quiera mover el elemento grafico.
        animacion.jLabelYDown(-30,20, 10, 5, lblTituloCredencial);
        //animacion.jTextFieldXRight(650,760, 10, 5, txtFiltrar);
        animacion.jLabelYUp(0,-30, 10, 5, lblFlechaAbajo);
        animacion.jLabelYDown(-30,0, 10, 5, lblFlechaArriba);
    }//GEN-LAST:event_lblFlechaAbajoMouseClicked

    private void lblFlechaArribaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFlechaArribaMouseClicked

        AnimationClass animacion = new AnimationClass();

        //******Filtrar******
        //Sirve para que el campo de txtFiltrar se visualice.

        //El primer parametro es la posición actual del elemento gráfico
        //La segunda es la posición que quiera mover el elemento grafico.
        animacion.jLabelYUp(20,-30, 10, 5, lblTituloCredencial);
        animacion.jLabelYUp(0,-30, 10, 5, lblFlechaArriba);
        animacion.jLabelYDown(-30,0, 10, 5, lblFlechaAbajo);

    }//GEN-LAST:event_lblFlechaArribaMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
       
        AnimationClass animacion = new AnimationClass();

        animacion.jTextFieldXRight(650,760, 10, 5, txtFiltrar);
        


        //Validación de cada una de las cajas de Texto (Campos vacios).

        if(txtCodigo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor, Digita el código para la identificación del User, Contraseña" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso);
            txtCodigo.requestFocus();
            return;
        }

        //Validar el campo de Usuario para el Login.
        if (cmbUsuario.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, Selecciona un rol" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso);
            cmbUsuario.requestFocus();
            return;
        }
        //Validar el campo de Password para el Login.
        if (txtClave.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Digite una contraseña" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso);
            txtClave.requestFocus();
            return;
        }
        //Validar el campo de estado.
        if (cmbEstado.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, Selecciona el estado" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso);
            cmbEstado.requestFocus();
            return;
        }

        TablaCredencial  objCredencial = new TablaCredencial();

        LimpiarCampos limpar = new LimpiarCampos();


        //Declaración de las variables para obtener los valores que se encuentran en las cajas de texto
        int codigo =  Integer.parseInt(txtCodigo.getText());
        String user;
        if (cmbUsuario.getSelectedIndex() == 1) {

            user = "Administrador";
        }
        else {
            user = "Vendedor";
        }


        String clave = txtClave.getText();
        char estado;

        //Si el usuario selecciona el Item 1 (Activo) se añade una A de lo contrario I
        if (cmbEstado.getSelectedIndex() == 1) {

            estado = 'A';
        }
        else {
            estado = 'I';
        }

        try {
            boolean resultado = objCredencial.insertarCredencial(codigo, user, clave , estado);
            if(resultado == true){
                JOptionPane.showMessageDialog(null, "Se inserto un nuevo registro.");
                //Utilizamos el objeto para limpiar todos los campos.
                limpar.limpiarCampoCredencial();
            }else{
                JOptionPane.showMessageDialog(null, "Error al insertar.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lo sentimos, ocurrió algo inesperado. ¡Por favor, vuelva a intentarlo!");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        // ******* Programación para el boton de Modificar **********

        AnimationClass animacion = new AnimationClass();

        //******Filtrar******
        //Sirve para que el campo de txtFiltrar se visualice.

        //El primer parametro es la posición actual del elemento gráfico
        //La segunda es la posición que quiera mover el elemento grafico.
        animacion.jTextFieldXLeft(760,650, 10, 5, txtFiltrar);

        //Saber si la tabla esta vacia esto me permite decirle al Usuario que presione el boton de buscar registros.
        if(tblCredencial.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "Por favor, Presione el botón de Bucar" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso );
            return;
        }

        if (tblCredencial.getSelectedRow()== -1) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso );
            return;
        }

        //***Validación de cada una de las cajas de Texto (Campos vacios)***.


        //Validar el campo de Usuario para el Login.
        if (cmbUsuario.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, Selecciona un rol" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso);
            cmbUsuario.requestFocus();
            return;
        }
        //Validar el campo de Password para el Login.
        if (txtClave.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Digite una contraseña" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso);
            txtClave.requestFocus();
            return;
        }
        //Validar el campo de estado.
        if (cmbEstado.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, Selecciona el estado" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso);
            cmbEstado.requestFocus();
            return;
        }

        TablaCredencial objCredencial = new TablaCredencial();

        // Defino el modelo para el JTable
        modelo = (DefaultTableModel) tblCredencial.getModel();

        LimpiarCampos limpiar = new LimpiarCampos();

        //***Variables para obtener los valores de los componentes gráficos.

        int codigo = Integer.parseInt(txtCodigo.getText());
        String user;
        if (cmbUsuario.getSelectedIndex() == 1) {

            user = "Administrador";
        }
        else {
            user = "Vendedor";
        }

        String clave = txtClave.getText();
        char estado;

        //Si el usuario selecciona el Item 1 (Activo) se añade una A de lo contrario I
        if (cmbEstado.getSelectedIndex() == 1) {

            estado = 'A';
        }
        else {
            estado = 'I';
        }


        boolean resultado = objCredencial.actualizarCredencial(codigo, user, clave, estado);
        if(resultado == true){
            JOptionPane.showMessageDialog(null, "Se actualizó el registro.");
            limpiar.limpiarTabla();
            limpiar.limpiarCampoCredencial();
        }else{
            JOptionPane.showMessageDialog(null, "Error al actualizar.");
        }  
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void tblCredencialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCredencialMouseClicked
         /* Evento para cuendo el usuario presione click en cualquier fila de la tabla. 
           Lo que hará ese evento es poner todo los datos que hayan en la tabla en los distintos.
           JtextFiel , JCombobox.
        */

        // Defino el modelo para el JTable
        modelo = (DefaultTableModel) tblCredencial.getModel();
        
        // Asigno el elemento seleccionado de la tabla a los respectivos campos del formulario
        try {
            txtCodigo.setText(String.valueOf(modelo.getValueAt(tblCredencial.getSelectedRow(), 0)));
            
            String user = (String)modelo.getValueAt(tblCredencial.getSelectedRow(), 1);
            
            if(user.equals("Administrador")){
                cmbUsuario.setSelectedItem("Administrador");
            }
            else{
                cmbUsuario.setSelectedItem("Vendedor");
            } 
            
            txtClave.setText((String) modelo.getValueAt(tblCredencial.getSelectedRow(), 2));
            String estado = (String)modelo.getValueAt(tblCredencial.getSelectedRow(), 3);
            
            if(estado.equals("A")){
            cmbEstado.setSelectedItem("Activo");
            }
            else{
                cmbEstado.setSelectedItem("Inactivo");
            }  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lo sentimos, ocurrió algo inesperado al momento de seleccionar una fila ¡Por favor, vuelva a intentarlo!");
        }    
    }//GEN-LAST:event_tblCredencialMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        
        AnimationClass animacion = new AnimationClass();

        //******Filtrar******
        //Sirve para que el campo de txtFiltrar se visualice.

        //El primer parametro es la posición actual del elemento gráfico
        //La segunda es la posición que quiera mover el elemento grafico.
        animacion.jTextFieldXLeft(760,650, 10, 5, txtFiltrar);

        //Saber si la tabla esta vacia esto me permite decirle al Usuario que presione el boton de buscar registros.
        if(this.tblCredencial.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "Por favor, Presione el botón de Bucar" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso );
            return;
        }

        if (tblCredencial.getSelectedRow()== -1) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila" , "¡Aviso!" , JOptionPane.INFORMATION_MESSAGE , imagenAviso );
            return;
        }

        // Defino el modelo para el JTable
        modelo = (DefaultTableModel) tblCredencial.getModel();
        TablaCredencial objCredencial = new TablaCredencial();
        LimpiarCampos limpiar = new LimpiarCampos();


        try {
            int codigo = Integer.parseInt(txtCodigo.getText());

            boolean resultado = objCredencial.eliminarCredencial(codigo);
            if(resultado == true){
                JOptionPane.showMessageDialog(null, "Se Eliminó el registro correctamente.");
                limpiar.limpiarCampoCredencial();
                limpiar.limpiarTabla();
            }else{
                JOptionPane.showMessageDialog(null, "Error al Eliminar.");
            }  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lo sentimos, ocurrió algo inesperado ¡Por favor, vuelva a intentarlo!" + e);
        }
          
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // ***** Programación del Boton Limpiar Todo*****
        
        LimpiarCampos limpar = new LimpiarCampos();
        
        
        // Defino el modelo para el JTable
        modelo = (DefaultTableModel) tblCredencial.getModel();
        AnimationClass animacion = new AnimationClass();
        
        animacion.jTextFieldXRight(650,760, 10, 5, txtFiltrar);

        // *** Limpio los Campos ***
        limpar.limpiarCampoCredencial();
        
        // Limpio las filas y las columnas de la tabla
        limpar.limpiarTabla();
        //El estado del boton guardar se coloca activo para que el usuario lo pueda presionar.
        btnGuardar.setEnabled(true);
        
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtFiltrarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltrarKeyTyped
        //***Programación para filtrar la información de un Jtable
        
        modelo = (DefaultTableModel) tblCredencial.getModel();
        
        txtFiltrar.addKeyListener(new KeyAdapter(){
            
            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtFiltrar.getText(), 1));
            }
        });
        
        trs = new TableRowSorter(modelo);
        tblCredencial.setRowSorter(trs);
    }//GEN-LAST:event_txtFiltrarKeyTyped

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        
        int dialog = JOptionPane.YES_NO_OPTION;
        //Almacena la opción que el usuario escoja (1 -> no) (0 -> Si).
        int result = JOptionPane.showConfirmDialog(null, "¿Está seguro de cerrar la ventana?" , "Advertencia" , dialog);
        
        //Si el usuario presiona Si automaticamente se cierra la ventana.
        if (result == 0) {
            MenuAdministrador.btnCredencial.setEnabled(true);
            this.dispose();
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void btnGuardarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseMoved

        txtCodigo.setEditable(true);
        txtClave.setEditable(true);
        cmbUsuario.setEnabled(true);
        cmbEstado.setEnabled(true);

    }//GEN-LAST:event_btnGuardarMouseMoved

    private void btnActualizarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseMoved
        txtCodigo.setEditable(false);
        txtClave.setEditable(true);
        cmbUsuario.setEnabled(true);
        cmbEstado.setEnabled(true);
    }//GEN-LAST:event_btnActualizarMouseMoved

    private void btnEliminarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseMoved
        txtCodigo.setEditable(false);
        txtClave.setEditable(false);
        cmbUsuario.setEnabled(false);
        cmbEstado.setEnabled(false);
    }//GEN-LAST:event_btnEliminarMouseMoved

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        //Se declara una variable de tipo char para obtener todos los métodos del evt.getKeyChar();
        char soloNumero = evt.getKeyChar();
        
        //si el usuario digita letras o caracteres especiales u otro caracter el teclado no aceptará y se bloqueará. 
        if ((soloNumero < '0' || soloNumero > '9')) {
            evt.consume();
            getToolkit().beep(); 
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtClaveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveKeyTyped
        //Se declara una variable de tipo char para obtener todos los métodos del evt.getKeyChar();
        char soloNumero = evt.getKeyChar();
        
        //si el usuario digita letras o caracteres especiales u otro caracter el teclado no aceptará y se bloqueará. 
        if ((soloNumero < '0' || soloNumero > '9')) {
            evt.consume();
            getToolkit().beep();   
        }
    }//GEN-LAST:event_txtClaveKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    public static javax.swing.JComboBox<String> cmbEstado;
    public static javax.swing.JComboBox<String> cmbUsuario;
    private javax.swing.ButtonGroup grbtnCRUD;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lblActualizar;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblContrasena;
    private javax.swing.JLabel lblDato;
    private javax.swing.JLabel lblEliminar;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFiltrar;
    private javax.swing.JLabel lblFlechaAbajo;
    private javax.swing.JLabel lblFlechaArriba;
    private javax.swing.JLabel lblGuardar;
    private javax.swing.JLabel lblLimpiar;
    private javax.swing.JLabel lblTituloCredencial;
    private javax.swing.JLabel lblUsuario;
    public static javax.swing.JTable tblCredencial;
    public static javax.swing.JTextField txtClave;
    public static javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtFiltrar;
    // End of variables declaration//GEN-END:variables
}
